{"name": "test_cart_operation", "status": "failed", "statusDetails": {"message": "AssertionError: Element ('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]') not clicable", "trace": "self = <pages.basket_page.BasketPage object at 0x000001EB981EB750>\nlocator = ('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]')\n\n    @allure.step('wait for clicable element')\n    def wait_for_clicable(self, locator):\n        \"\"\"Waiting until the element becomes clickable otherwise an error will\n        be caused.\"\"\"\n        try:\n>           return WebDriverWait(self.driver, self.wait_until).until(\n                EC.element_to_be_clickable(locator))\n\nhelpers\\base.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:92: in until\n    value = method(self._driver)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:356: in _predicate\n    element = visibility_of(target)(driver)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:167: in _predicate\n    return _element_if_visible(element)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:173: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:251: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001EB981FB650>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x771C7C6E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x771C7C3E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=119.0.6045.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x012072A3+45731]\nE       \t(No symbol) [0x01192D51]\nE       \t(No symbol) [0x0108880D]\nE       \t(No symbol) [0x0108C3EA]\nE       \t(No symbol) [0x0108DD59]\nE       \t(No symbol) [0x010EBFCC]\nE       \t(No symbol) [0x010D7FDC]\nE       \t(No symbol) [0x010EB7A2]\nE       \t(No symbol) [0x010D7DD6]\nE       \t(No symbol) [0x010B31F6]\nE       \t(No symbol) [0x010B439D]\nE       \tGetHandleVerifier [0x01510716+3229462]\nE       \tGetHandleVerifier [0x015584C8+3523784]\nE       \tGetHandleVerifier [0x0155214C+3498316]\nE       \tGetHandleVerifier [0x01291680+611968]\nE       \t(No symbol) [0x0119CCCC]\nE       \t(No symbol) [0x01198DF8]\nE       \t(No symbol) [0x01198F1D]\nE       \t(No symbol) [0x0118B2C7]\nE       \tBaseThreadInitThunk [0x765BFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x771C7C6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x771C7C3E+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_basket_page.TestBasketPage object at 0x000001EB9957E290>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"56ac001de78cecea203e1ee81af7eaba\")>\n\n    @allure.feature('Basket')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.story('Checks the display of goods in the cart')\n    def test_cart_operation(self, driver):\n        \"\"\"Checks that when adding an item to the cart, the quantity and name\n        of the goods are displayed.\"\"\"\n        main_page = MainPage(driver)\n        main_page.open_page_and_reject_cookies()\n        basket_page = BasketPage(driver)\n>       basket_page.select_a_product_and_add_it_to_cart()\n\ntests\\test_basket_page.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\basket_page.py:56: in select_a_product_and_add_it_to_cart\n    self.click_on_product(self.CHOOSE_PRODUCT_LOCATOR2)\npages\\basket_page.py:18: in click_on_product\n    self.click_on(product)\nhelpers\\base.py:50: in click_on\n    element = self.wait_for_clicable(locator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.basket_page.BasketPage object at 0x000001EB981EB750>\nlocator = ('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]')\n\n    @allure.step('wait for clicable element')\n    def wait_for_clicable(self, locator):\n        \"\"\"Waiting until the element becomes clickable otherwise an error will\n        be caused.\"\"\"\n        try:\n            return WebDriverWait(self.driver, self.wait_until).until(\n                EC.element_to_be_clickable(locator))\n        except WebDriverException:\n>           assert False, f\"Element {locator} not clicable\"\nE           AssertionError: Element ('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]') not clicable\n\nhelpers\\base.py:23: AssertionError"}, "description": "Checks that when adding an item to the cart, the quantity and name\n        of the goods are displayed.", "steps": [{"name": "Open page and reject cookies", "status": "passed", "steps": [{"name": "Reject cookies", "status": "passed", "steps": [{"name": "Click on element using js scripts", "status": "passed", "steps": [{"name": "wait for clicable element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', '[aria-label=\"Отклонить\"]')"}], "start": 1700873525410, "stop": 1700873525682}], "parameters": [{"name": "locator", "value": "('css selector', '[aria-label=\"Отклонить\"]')"}], "start": 1700873525410, "stop": 1700873525950}, {"name": "Click on element using js scripts", "status": "passed", "steps": [{"name": "wait for clicable element", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', '[aria-label=\"Отклонить\"]')"}], "start": 1700873525951, "stop": 1700873526614}], "parameters": [{"name": "locator", "value": "('css selector', '[aria-label=\"Отклонить\"]')"}], "start": 1700873525951, "stop": 1700873526740}], "start": 1700873525410, "stop": 1700873526740}], "start": 1700873522979, "stop": 1700873526740}, {"name": "Select a product and add it to cart", "status": "failed", "statusDetails": {"message": "AssertionError: Element ('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]') not clicable\n", "trace": "  File \"E:\\graduation_project\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\pages\\basket_page.py\", line 56, in select_a_product_and_add_it_to_cart\n    self.click_on_product(self.CHOOSE_PRODUCT_LOCATOR2)\n  File \"E:\\graduation_project\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\pages\\basket_page.py\", line 18, in click_on_product\n    self.click_on(product)\n  File \"E:\\graduation_project\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\helpers\\base.py\", line 50, in click_on\n    element = self.wait_for_clicable(locator)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\helpers\\base.py\", line 23, in wait_for_clicable\n    assert False, f\"Element {locator} not clicable\"\n"}, "steps": [{"name": "Enter product text", "status": "passed", "steps": [{"name": "Click on element", "status": "passed", "steps": [{"name": "wait for clicable element", "status": "passed", "parameters": [{"name": "locator", "value": "('id', 'catalogSearch')"}], "start": 1700873526740, "stop": 1700873527035}], "parameters": [{"name": "locator", "value": "('id', 'catalogSearch')"}], "start": 1700873526740, "stop": 1700873527197}, {"name": "Fill field with text", "status": "passed", "steps": [{"name": "wait for clicable element", "status": "passed", "parameters": [{"name": "locator", "value": "('id', 'catalogSearch')"}], "start": 1700873527198, "stop": 1700873527374}, {"name": "Clear an input field by simulating button presses", "status": "passed", "steps": [{"name": "wait for clicable element", "status": "passed", "parameters": [{"name": "locator", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"56ac001de78cecea203e1ee81af7eaba\", element=\"DEDBEA61F29A632A6D4C576480BDBB75_element_62\")>"}], "start": 1700873527376, "stop": 1700873527662}], "parameters": [{"name": "locator", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"56ac001de78cecea203e1ee81af7eaba\", element=\"DEDBEA61F29A632A6D4C576480BDBB75_element_62\")>"}], "start": 1700873527375, "stop": 1700873527811}], "parameters": [{"name": "locator", "value": "('id', 'catalogSearch')"}, {"name": "text", "value": "'6.852.245'"}], "start": 1700873527197, "stop": 1700873528009}], "parameters": [{"name": "product", "value": "'6.852.245'"}], "start": 1700873526740, "stop": 1700873528009}, {"name": "Click on product", "status": "failed", "statusDetails": {"message": "AssertionError: Element ('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]') not clicable\n", "trace": "  File \"E:\\graduation_project\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\pages\\basket_page.py\", line 18, in click_on_product\n    self.click_on(product)\n  File \"E:\\graduation_project\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\helpers\\base.py\", line 50, in click_on\n    element = self.wait_for_clicable(locator)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\helpers\\base.py\", line 23, in wait_for_clicable\n    assert False, f\"Element {locator} not clicable\"\n"}, "steps": [{"name": "Click on element", "status": "failed", "statusDetails": {"message": "AssertionError: Element ('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]') not clicable\n", "trace": "  File \"E:\\graduation_project\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\helpers\\base.py\", line 50, in click_on\n    element = self.wait_for_clicable(locator)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\helpers\\base.py\", line 23, in wait_for_clicable\n    assert False, f\"Element {locator} not clicable\"\n"}, "steps": [{"name": "wait for clicable element", "status": "failed", "statusDetails": {"message": "AssertionError: Element ('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]') not clicable\n", "trace": "  File \"E:\\graduation_project\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\graduation_project\\helpers\\base.py\", line 23, in wait_for_clicable\n    assert False, f\"Element {locator} not clicable\"\n"}, "parameters": [{"name": "locator", "value": "('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]')"}], "start": 1700873528010, "stop": 1700873528484}], "parameters": [{"name": "locator", "value": "('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]')"}], "start": 1700873528009, "stop": 1700873528556}], "parameters": [{"name": "product", "value": "('css selector', '[href=\"/mouses/deathadderessentialrz0103850200r3m1_razer.html\"]')"}], "start": 1700873528009, "stop": 1700873528556}], "start": 1700873526740, "stop": 1700873528556}], "start": 1700873522979, "stop": 1700873528556, "uuid": "0bd89439-95ea-46bb-85f8-0eb3744e306c", "historyId": "d4837cc2cfee3b275771c014cc170943", "testCaseId": "d4837cc2cfee3b275771c014cc170943", "fullName": "tests.test_basket_page.TestBasketPage#test_cart_operation", "labels": [{"name": "feature", "value": "Basket"}, {"name": "severity", "value": "critical"}, {"name": "story", "value": "Checks the display of goods in the cart"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_basket_page"}, {"name": "subSuite", "value": "TestBasketPage"}, {"name": "host", "value": "DESKTOP-U090JD3"}, {"name": "thread", "value": "6008-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_basket_page"}]}