{"name": "test_catalog_search", "status": "failed", "statusDetails": {"message": "AssertionError: Element ('css selector', '[href=\"/nonfiction_books/popuri_01309.html\"]') not clicable", "trace": "self = <pages.main_page.MainPage object at 0x000001EC92325CD0>\nlocator = ('css selector', '[href=\"/nonfiction_books/popuri_01309.html\"]')\n\n    def wait_for_clicable(self, locator):\n        \"\"\"Waiting until the element becomes clickable otherwise an error will\n        be caused.\"\"\"\n        try:\n>           return WebDriverWait(self.driver, self.wait_until).until(\n                EC.element_to_be_clickable(locator))\n\nhelpers\\base.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cc26e57123b4869e2d2d42de66703040\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001EC922F0540>\nmessage = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00B972A3+45731]\nE       \t(No symbol) [0x00B22D51]\nE       \t(No symbol) [0x00A1880D]\nE       \t(No symbol) [0x00A4B940]\nE       \t(No symbol) [0x00A4BE0B]\nE       \t(No symbol) [0x00A7D1F2]\nE       \t(No symbol) [0x00A68024]\nE       \t(No symbol) [0x00A7B7A2]\nE       \t(No symbol) [0x00A67DD6]\nE       \t(No symbol) [0x00A431F6]\nE       \t(No symbol) [0x00A4439D]\nE       \tGetHandleVerifier [0x00EA0716+3229462]\nE       \tGetHandleVerifier [0x00EE84C8+3523784]\nE       \tGetHandleVerifier [0x00EE214C+3498316]\nE       \tGetHandleVerifier [0x00C21680+611968]\nE       \t(No symbol) [0x00B2CCCC]\nE       \t(No symbol) [0x00B28DF8]\nE       \t(No symbol) [0x00B28F1D]\nE       \t(No symbol) [0x00B1B2C7]\nE       \tBaseThreadInitThunk [0x76FDFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C77C6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C77C3E+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_header.TestHeader object at 0x000001EC91E10C50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cc26e57123b4869e2d2d42de66703040\")>\n\n    def test_catalog_search(self, driver):\n        \"\"\"Enters the name of the product in the input field, selects the\n        product and checks that the desired page has opened.\"\"\"\n        header = MainPage(driver)\n        header.open_page_and_reject_cookies()\n        header.enter_product_text(header.request_text)\n>       header.click_on_product(header.CHOOSE_PRODUCT_LOCATOR)\n\ntests\\test_header.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nelements\\header_element.py:28: in click_on_product\n    self.click_on(product)\nhelpers\\base.py:44: in click_on\n    element = self.wait_for_clicable(locator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.main_page.MainPage object at 0x000001EC92325CD0>\nlocator = ('css selector', '[href=\"/nonfiction_books/popuri_01309.html\"]')\n\n    def wait_for_clicable(self, locator):\n        \"\"\"Waiting until the element becomes clickable otherwise an error will\n        be caused.\"\"\"\n        try:\n            return WebDriverWait(self.driver, self.wait_until).until(\n                EC.element_to_be_clickable(locator))\n        except WebDriverException:\n>           assert False, f\"Element {locator} not clicable\"\nE           AssertionError: Element ('css selector', '[href=\"/nonfiction_books/popuri_01309.html\"]') not clicable\n\nhelpers\\base.py:21: AssertionError"}, "description": "Enters the name of the product in the input field, selects the\n        product and checks that the desired page has opened.", "start": 1700079446623, "stop": 1700079461425, "uuid": "1c6b0ce0-7a11-451d-a3b0-f8a5573ad56c", "historyId": "c992f18eae1781e9bb97083d8746cbff", "testCaseId": "c992f18eae1781e9bb97083d8746cbff", "fullName": "tests.test_header.TestHeader#test_catalog_search", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_header"}, {"name": "subSuite", "value": "TestHeader"}, {"name": "host", "value": "DESKTOP-U090JD3"}, {"name": "thread", "value": "6468-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_header"}]}